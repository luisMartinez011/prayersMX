---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/carritos/{id}":
    parameters:
    - name: id
      in: path
      description: id del usuario
      required: true
      schema:
        type: string
    get:
      summary: ver carrito del usuario
      tags:
      - Carrito
      security:
      - Bearer: []
      responses:
        '200':
          description: successful
    patch:
      summary: agregar un producto al carrito
      tags:
      - Carrito
      security:
      - Bearer: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre_producto:
                  type: string
                cantidadComprada:
                  type: integer
              required:
              - nombre_producto
              - cantidadComprada
    delete:
      summary: quitar un producto del carrito
      tags:
      - Carrito
      security:
      - Bearer: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre_producto:
                  type: string
              required:
              - nombre_producto
  "/carritos/comprar/{id}":
    parameters:
    - name: id
      in: path
      description: id del usuario
      required: true
      schema:
        type: string
    delete:
      summary: comprar los productos del carrito
      tags:
      - Carrito
      security:
      - Bearer: []
      responses:
        '200':
          description: successful
  "/compras/{id}":
    parameters:
    - name: id
      in: path
      description: id del usuario
      required: true
      schema:
        type: string
    get:
      summary: Mostrar las compras que ha hecho el usuario
      tags:
      - Compras
      security:
      - Bearer: []
      responses:
        '204':
          description: Valid credentials
  "/productos":
    get:
      summary: list productos
      tags:
      - Producto
      responses:
        '200':
          description: successful
  "/productos/{id}":
    parameters:
    - name: id
      in: path
      description: id del producto
      required: true
      schema:
        type: string
    get:
      summary: show one producto
      tags:
      - Producto
      responses:
        '200':
          description: successful
  "/usuarios/signup":
    post:
      summary: signup usuario
      tags:
      - Usuario
      parameters: []
      responses:
        '200':
          description: successful
        '422':
          description: bad parameters
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                name:
                  type: string
              required:
              - email
              - password
              - name
  "/usuarios/login":
    post:
      summary: login usuario
      tags:
      - Usuario
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
              - email
              - password
components:
  securitySchemes:
    Bearer:
      type: apiKey
      description: Bearer token
      name: Authorization
      in: header
  schemas:
    usuario:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        name:
          type: string
        carrito:
          "$ref": "#/components/schemas/carrito"
        compra:
          "$ref": "#/components/schemas/compra"
      required:
      - email
      - password
      - name
    carrito:
      type: object
      properties:
        total:
          type: number
        orders:
          type: array
          items:
            "$ref": "#/components/schemas/order"
    producto:
      type: object
      properties:
        nombre:
          type: string
        precio:
          type: number
        descripcion:
          type: string
        imagen:
          type: string
      required:
      - nombre
      - precio
      - descripcion
      - imagen
    compra:
      type: object
      properties:
        total:
          type: number
        orders:
          type: array
          items:
            "$ref": "#/components/schemas/order"
    order:
      type: object
      properties:
        total:
          type: number
        cantidad:
          type: integer
        producto:
          "$ref": "#/components/schemas/producto"
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
