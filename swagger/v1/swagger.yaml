---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/carritos/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: ver_carrito carrito
      tags:
      - Carrito
      responses:
        '200':
          description: successful
    patch:
      summary: agregar_Carrito carrito
      tags:
      - Carrito
      responses:
        '200':
          description: successful
    delete:
      summary: quitar_Carrito carrito
      tags:
      - Carrito
      responses:
        '200':
          description: successful
  "/carritos":
    post:
      summary: create carrito
      tags:
      - Carrito
      responses:
        '200':
          description: successful
  "/carritos/comprar/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    delete:
      summary: comprar carrito
      tags:
      - Carrito
      responses:
        '200':
          description: successful
  "/productos":
    get:
      summary: list productos
      tags:
      - Producto
      responses:
        '200':
          description: successful
    post:
      summary: create producto
      tags:
      - Producto
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/producto"
  "/productos/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show one producto
      tags:
      - Producto
      responses:
        '200':
          description: successful
  "/usuarios/signup":
    post:
      summary: signup usuario
      tags:
      - Usuario
      parameters: []
      responses:
        '200':
          description: successful
        '422':
          description: bad parameters
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/new_usuario"
  "/usuarios/login":
    post:
      summary: login usuario
      tags:
      - Usuario
      responses:
        '200':
          description: successful
  "/ventas":
    get:
      summary: list venta
      tags:
      - Venta
      responses:
        '200':
          description: successful
    post:
      summary: create venta
      tags:
      - Venta
      responses:
        '200':
          description: successful
  "/ventas/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show venta
      tags:
      - Venta
      responses:
        '200':
          description: successful
    patch:
      summary: update venta
      tags:
      - Venta
      responses:
        '200':
          description: successful
    put:
      summary: update venta
      tags:
      - Venta
      responses:
        '200':
          description: successful
    delete:
      summary: delete venta
      tags:
      - Venta
      responses:
        '200':
          description: successful
components:
  schemas:
    errors_object:
      type: object
      properties:
        errors:
          "$ref": "#/components/schemas/errors_map"
    errors_map:
      type: object
      additionalProperties:
        type: array
        items:
          type: string
    usuario:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        name:
          type: string
        carrito:
          "$ref": "#/components/schemas/carrito"
        ventas:
          "$ref": "#/components/schemas/venta"
      required:
      - email
      - password
      - name
    new_usuario:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        name:
          type: string
      required:
      - email
      - password
      - name
    carrito:
      type: object
      properties:
        total:
          type: number
        cantidadComprada:
          type: number
        producto:
          type: array
          items:
            "$ref": "#/components/schemas/producto"
      required:
      - total
      - cantidadComprada
      - producto
    producto:
      type: object
      properties:
        nombre:
          type: string
        stock:
          type: integer
        precio:
          type: number
        descripcion:
          type: string
        imagen:
          type: string
      required:
      - nombre
      - stock
      - precio
      - descripcion
      - imagen
    venta:
      type: object
      properties:
        comprado:
          type: integer
        total:
          type: number
        producto:
          type: array
          items:
            "$ref": "#/components/schemas/producto"
      required:
      - comprado
      - total
      - producto
servers:
- url: http://localhost:3000
  variables:
    defaultHost:
      default: http://localhost:3000
